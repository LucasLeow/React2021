-- React Events --
	- To detect browser event but using React Syntax
		- (typically involving camelCase)

-- SyntheticEvent --
	- Event handlers will be passed instances of SyntheticEvent (e)
(https://legacy.reactjs.org/docs/events.html#mouse-events)
	event object attributes:
		- e.bubbles (true if event bubbles up DOM)
		
		- e.cancelable (whether event can be cancelled)
		
		- e.currentTarget (current Target for event)
		
		- e.defaultPrevented
		
		- e.eventPhase (indicates which phase of event flow evaluated)
			- 0: Not processed | 1: Capturing phase | 2: At event target | 3: bubbling phase
			- Capturing phase: Path from window to element
			- Bubbling phase: Path from element to Window
			
		- e.isTrusted (true when event generated by user, false when event by script)
		
		- e.nativeEvent (browser native event) (DOMEvent)
		
		- e.preventDefault() : disable default action of event
			- eg: dont allow clicking of checkbox due to prevent default behaviour of clicking it
			
		- e.isDefaultPrevented() : check if default is prevented
		
		- e.stopPropagation()
		
		- e.isPropagationStopped()
		
		- e.target
		
			target vs currentTarget:
			- target: element that triggered the event (clicking on parent element also triggers due bubble)
			- currentTarget: element that event listener is attached to (actual element)
		
		
		- e.timeStamp (seconds from Unix Epoch)
		
		- e.type (Event type)


	** React Event Listener should be added to HTML content (HTML tags)
	** Never add to React Components (<Header /> or <Nav /> etc.)
		
		
	1) Create "SearchBar" dir in "components" dir
	2) Create SearchBar.js & SearchBar.css
	
	import "./SearchBar.css";

	export default function SearchBar(props) {
		function submitForm(e) {
			e.preventDefault();
			console.log("form submitted");
		}
		function searchFocus(e) {
			console.log("textbox focused");
		}
		function inputChange(e) {
			console.log("input by user: ", e.target.value);
		}
		function buttonClicked(e) {
			e.preventDefault();
			console.log("button clicked");
		}
		return (
			<section className="searchBar">
				<form onSubmit={submitForm}>
					<input onFocus={searchFocus} onInput={inputChange} type="text" name="keyword" className="searchText" placeholder="keyword" ></input>
					<button onClick={buttonClicked} type="submit" className="searchBtn" name="searchBtn">Search</button>
				</form>
			</section>
		)
	}
	
	
	** Refer to documentation for different types of React Events to be applied on HTML elements
	(https://legacy.reactjs.org/docs/events.html)